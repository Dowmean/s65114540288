import 'dart:convert';
import 'package:flutter/material.dart';
import 'package:firebase_auth/firebase_auth.dart';
import 'package:http/http.dart' as http;

class AddBankScreen extends StatefulWidget {
  const AddBankScreen({super.key});

  @override
  _AddBankScreenState createState() => _AddBankScreenState();
}

class _AddBankScreenState extends State<AddBankScreen> {
  final _formKey = GlobalKey<FormState>();
  final TextEditingController fullnameController = TextEditingController();
  final TextEditingController bankNumberController = TextEditingController();
  
  String selectedBank = "‡∏Å‡∏£‡∏∏‡∏á‡πÑ‡∏ó‡∏¢ (KTB)"; // ‡∏Ñ‡πà‡∏≤‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô
  bool isDefault = false;

  // üîπ ‡∏£‡∏≤‡∏¢‡∏ä‡∏∑‡πà‡∏≠‡∏ò‡∏ô‡∏≤‡∏Ñ‡∏≤‡∏£‡πÉ‡∏ô‡πÑ‡∏ó‡∏¢ (‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏°‡∏≤‡∏Å‡∏Ç‡∏∂‡πâ‡∏ô)
  final List<String> bankList = [
    "‡∏Å‡∏£‡∏∏‡∏á‡πÑ‡∏ó‡∏¢ (KTB)",
    "‡∏Å‡∏£‡∏∏‡∏á‡πÄ‡∏ó‡∏û (BBL)",
    "‡∏Å‡∏™‡∏¥‡∏Å‡∏£‡πÑ‡∏ó‡∏¢ (KBank)",
    "‡πÑ‡∏ó‡∏¢‡∏û‡∏≤‡∏ì‡∏¥‡∏ä‡∏¢‡πå (SCB)",
    "‡∏ò‡∏ô‡∏ä‡∏≤‡∏ï (TTB)",
    "‡∏≠‡∏≠‡∏°‡∏™‡∏¥‡∏ô (GSB)",
    "‡∏¢‡∏π‡πÇ‡∏≠‡∏ö‡∏µ (UOB)",
    "‡∏ã‡∏µ‡πÑ‡∏≠‡πÄ‡∏≠‡πá‡∏°‡∏ö‡∏µ ‡πÑ‡∏ó‡∏¢ (CIMB)",
    "‡πÅ‡∏•‡∏ô‡∏î‡πå ‡πÅ‡∏≠‡∏ô‡∏î‡πå ‡πÄ‡∏Æ‡πâ‡∏≤‡∏™‡πå (LH Bank)",
    "‡∏ó‡∏´‡∏≤‡∏£‡πÑ‡∏ó‡∏¢‡∏ò‡∏ô‡∏ä‡∏≤‡∏ï (TTB)",
    "‡πÄ‡∏Å‡∏µ‡∏¢‡∏£‡∏ï‡∏¥‡∏ô‡∏≤‡∏Ñ‡∏¥‡∏ô‡∏†‡∏±‡∏ó‡∏£ (KKP)",
    "‡∏ã‡∏¥‡∏ï‡∏µ‡πâ‡πÅ‡∏ö‡∏á‡∏Å‡πå (Citi)",
    "‡∏™‡πÅ‡∏ï‡∏ô‡∏î‡∏≤‡∏£‡πå‡∏î‡∏ä‡∏≤‡∏£‡πå‡πÄ‡∏ï‡∏≠‡∏£‡πå‡∏î (Standard Chartered)",
    "‡πÑ‡∏≠‡∏ã‡∏µ‡∏ö‡∏µ‡∏ã‡∏µ (ICBC)",
    "‡πÑ‡∏ó‡∏¢‡πÄ‡∏Ñ‡∏£‡∏î‡∏¥‡∏ï (Thai Credit)",
    "‡πÄ‡∏ß‡∏™‡πÄ‡∏ó‡∏¥‡∏£‡πå‡∏ô ‡∏¢‡∏π‡πÄ‡∏ô‡∏µ‡πà‡∏¢‡∏ô (Western Union)",
  ];

  Future<void> addBankAccount() async {
    if (!_formKey.currentState!.validate()) return;

    String firebaseUid = FirebaseAuth.instance.currentUser!.uid;
    String email = FirebaseAuth.instance.currentUser!.email ?? "";

    await http.post(
      Uri.parse('http://10.0.2.2:3000/bank-accounts'),
      headers: {"Content-Type": "application/json"},
      body: jsonEncode({
        "firebase_uid": firebaseUid,
        "email": email,
        "fullname": fullnameController.text,
        "banknumber": bankNumberController.text,
        "bankname": selectedBank,
        "is_default": isDefault
      }),
    );

    Navigator.pop(context, true);
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(title: const Text("‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ö‡∏±‡∏ç‡∏ä‡∏µ‡∏ò‡∏ô‡∏≤‡∏Ñ‡∏≤‡∏£")),
      body: Padding(
        padding: const EdgeInsets.all(16.0),
        child: Form(
          key: _formKey,
          child: Column(
            children: [
              TextFormField(
                controller: fullnameController,
                decoration: const InputDecoration(labelText: "‡∏ä‡∏∑‡πà‡∏≠-‡∏ô‡∏≤‡∏°‡∏™‡∏Å‡∏∏‡∏•"),
                validator: (value) => value!.isEmpty ? "‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏ä‡∏∑‡πà‡∏≠-‡∏ô‡∏≤‡∏°‡∏™‡∏Å‡∏∏‡∏•" : null,
              ),
              const SizedBox(height: 10),
              TextFormField(
                controller: bankNumberController,
                keyboardType: TextInputType.number,
                decoration: const InputDecoration(labelText: "‡πÄ‡∏•‡∏Ç‡∏ö‡∏±‡∏ç‡∏ä‡∏µ‡∏ò‡∏ô‡∏≤‡∏Ñ‡∏≤‡∏£"),
                validator: (value) => value!.isEmpty ? "‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡πÄ‡∏•‡∏Ç‡∏ö‡∏±‡∏ç‡∏ä‡∏µ" : null,
              ),
              const SizedBox(height: 10),
              DropdownButtonFormField<String>(
                value: selectedBank,
                items: bankList.map((String bank) {
                  return DropdownMenuItem(
                    value: bank,
                    child: Text(bank),
                  );
                }).toList(),
                onChanged: (newValue) {
                  setState(() {
                    selectedBank = newValue!;
                  });
                },
                decoration: const InputDecoration(labelText: "‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ò‡∏ô‡∏≤‡∏Ñ‡∏≤‡∏£"),
              ),
              const SizedBox(height: 10),
              CheckboxListTile(
                title: const Text("‡∏ï‡∏±‡πâ‡∏á‡πÄ‡∏õ‡πá‡∏ô‡∏ö‡∏±‡∏ç‡∏ä‡∏µ‡∏ò‡∏ô‡∏≤‡∏Ñ‡∏≤‡∏£‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô"),
                value: isDefault,
                onChanged: (value) {
                  setState(() {
                    isDefault = value!;
                  });
                },
              ),
              const SizedBox(height: 20),
              ElevatedButton(
                onPressed: addBankAccount,
                style: ElevatedButton.styleFrom(
                  backgroundColor: Colors.pinkAccent,
                  padding: const EdgeInsets.symmetric(vertical: 15),
                ),
                child: const Text("‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å", style: TextStyle(fontSize: 18, color: Colors.white)),
              ),
            ],
          ),
        ),
      ),
    );
  }
}
